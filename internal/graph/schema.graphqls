scalar Time

type Query {
  roles: [Role!]!

  users(showDeleted: Boolean): [User!]!
  user(id: ID, username: String): User!

  streams: [Stream!]!
  stream(id: ID, slug: String): Stream!
}

type Mutation {
  login(username: String!, password: String!): LoginResponse!

  createUser(user: UserUpdate!): User
  updateUser(id: Int!, user: UserUpdate!): User
  updateUserPassword(id: Int!, password: String!): Int
  deactivateUser(id: Int!): Int
  reactivateUser(id: Int!): Int

  createStream(stream: StreamUpdate!): Stream
  updateStream(id: ID!, stream: StreamUpdate!): Stream
  deleteStream(id: Int!): Int
}

type Subscription {
  stream(id: ID, slug: String): Stream
}
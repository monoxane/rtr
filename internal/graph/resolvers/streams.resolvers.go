package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.49

import (
	"context"

	"github.com/monoxane/rtr/internal/graph"
	"github.com/monoxane/rtr/internal/graph/model"
	"github.com/monoxane/rtr/internal/repository/users"
)

// CreatedAt is the resolver for the createdAt field.
func (r *streamResolver) CreatedAt(ctx context.Context, obj *model.Stream) (*int, error) {
	ret := int(obj.CreatedAt.Unix())
	return &ret, nil
}

// UpdatedAt is the resolver for the updatedAt field.
func (r *streamResolver) UpdatedAt(ctx context.Context, obj *model.Stream) (*int, error) {
	ret := int(obj.UpdatedAt.Unix())
	return &ret, nil
}

// UpdatedBy is the resolver for the updatedBy field.
func (r *streamResolver) UpdatedBy(ctx context.Context, obj *model.Stream) (*model.User, error) {
	return users.GetByID(*obj.UpdatedBy)
}

// Destination is the resolver for the destination field.
func (r *streamResolver) Destination(ctx context.Context, obj *model.Stream) (*model.Destination, error) {
	return nil, nil
}

// Stream returns graph.StreamResolver implementation.
func (r *Resolver) Stream() graph.StreamResolver { return &streamResolver{r} }

type streamResolver struct{ *Resolver }
